{"version":3,"sources":["components/Card.js","components/List_card.js","App.js","redux/actions/countryActions.js","redux/reducers/reducer.js","redux/store.js","index.js"],"names":["Card","title","number","fatality","recovery_rate","numero","undefined","footer","style","value","displayType","prefix","suffix","decimalScale","className","end","duration","List_card","confirmed","deaths","recovered","key","connect","state","countries","dispatch","add_countries","type","payload","addCountries","useState","setstate","provinces","setprovinces","search_data","country","detail","fetch","then","response","json","useEffect","name","onChange","event","target","data","provi","map","provinceState","countryRegion","search_provinces","iso2","length","e","index","selectedIndex","optionElement","childNodes","getAttribute","uid","initialState","reducer","store","action","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88ac4441.chunk.js","sourcesContent":["import React from 'react'\nimport NumberFormat from 'react-number-format';\nimport CountUp from 'react-countup'\n \n//<NumberFormat value={number} displayType={'text'} thousandSeparator={true}/> \n\nconst Card = ( {title, number, fatality, recovery_rate} ) => {\n\n    const numero = number===undefined ? 0 : number;\n    let footer = \"\";\n    let style = \"card-footer text-center\"\n\n    if(title==\"Muertos\"){\n        footer = <NumberFormat value={fatality} displayType={'text'} prefix=\"Fatalidad: \" suffix=\"%\" decimalScale={1}/>\n        style += \" bg-danger\"\n    }\n\n    if(title==\"Recuperados\"){\n        footer = <NumberFormat value={recovery_rate} displayType={'text'}  prefix=\"RecuperaciÃ³n: \" suffix=\"%\" decimalScale={1}/>\n        style += \" bg-success\" \n    }\n    \n    return (\n        <div className=\"card mb-2\">\n            <div className=\"card-body p-1\">\n                <h5 className=\"card-title text-center pt-2\">{title}</h5>\n                <p className=\"text-muted text-center\">\n                    <CountUp end={numero} duration={1} suffix=\" Personas\" /* start={0} prefix=\"$\" decimals={1}*/ />\n                </p>\n            </div>\n            {\n                footer != \"\" &&\n                <div className={style}>\n                    {footer}\n                </div>\n            }\n            \n        </div>\n    )\n\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\n\nconst List_card = ( { confirmed, deaths, recovered, recovery_rate, fatality } ) => {\n    \n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-4 px-3\">\n                <Card \n                    key=\"Confirmados\" \n                    title=\"Confirmados\" \n                    number={confirmed}/>\n            </div>\n            <div className=\"col-sm-4 px-3\">\n                <Card \n                    key=\"Recuperados\"\n                    title=\"Recuperados\" \n                    number={recovered}\n                    recovery_rate={recovery_rate}/>\n            </div>\n            <div className=\"col-sm-4 px-3\">\n                <Card \n                    key=\"Muertos\"\n                    title=\"Muertos\" \n                    number={deaths}\n                    fatality={fatality}/>\n            </div>\n        </div>\n    )\n}\n\nexport default List_card","import React,  {useEffect, useState} from 'react';\nimport {connect} from 'react-redux'\n\n//components\nimport List_card from './components/List_card'\n\n//actions redux\nimport { addCountries, addProvinces } from './redux/actions/countryActions'\n\nfunction App( {add_countries,  countries }  ) {\n\n  const [state, setstate] = useState({\n    confirmed: 0,\n    recovered: 0,\n    deaths: 0,\n    fatality: 0,\n    recovery_rate: 0,\n  })\n\n  const [provinces,setprovinces] = useState([])\n\n  const handlerCountries = (event) => {\n    let country = event.target.value;\n    search_data(country)\n    search_provinces(country)\n  }\n\n  const handlerProvince= (e) => {\n    //let province = e.target.value;\n    let index = e.target.selectedIndex;\n    let optionElement = e.target.childNodes[index]\n    let deaths =  optionElement.getAttribute('deaths');\n    let recovered =  optionElement.getAttribute('recovered');\n    let confirmed =  optionElement.getAttribute('confirmed');\n    setstate({\n      ...state,\n      confirmed: confirmed,\n      recovered: recovered,\n      deaths: deaths,\n      fatality: (deaths * 100) / confirmed,\n      recovery_rate: (recovered * 100) / confirmed\n    })\n  }\n\n\n  const search_data = (country=\"\") => {\n\n    const detail = country==\"\" ? \"\" : \"countries/\"+country\n\n    fetch(`https://covid19.mathdro.id/api/${detail}`)\n      .then(\n        response => response.json() \n      ).then(\n        response => {\n          setstate({\n            ...state,\n            confirmed: response.confirmed.value,\n            recovered: response.recovered.value,\n            deaths: response.deaths.value,\n            fatality: (response.deaths.value * 100) / response.confirmed.value,\n            recovery_rate: (response.recovered.value * 100) / response.confirmed.value\n          })\n        }\n      )    \n  }\n\n\n  const search_data_province = (country=\"\") => {\n    alert(\"Buscar dato province\")    \n  }\n\n\n  function search_provinces(country){\n\n    setprovinces([])\n\n    fetch(`https://covid19.mathdro.id/api/countries/${country}/confirmed`)\n      .then(\n        response => response.json() \n      ).then(\n        data => {\n          let provi = data.map( value => {\n            return { \n                      provinceState: value.provinceState, \n                      countryRegion: value.countryRegion, \n                      confirmed: value.confirmed, \n                      deaths: value.deaths , \n                      recovered: value.recovered }\n          } )\n          setprovinces(provi)\n        }\n      )\n  }\n\n  \n  useEffect(() => {\n\n    search_data()\n    \n    fetch(\"https://covid19.mathdro.id/api/countries\")\n      .then(\n        response =>  response.json() \n      ).then(\n        response => {\n          add_countries(response.countries)\n        }\n      )\n\n  },[])\n  \n\n  return (\n      <div className=\"App\">\n        <h1 className=\"text-center\">CORONA APP</h1>\n        <div className=\"row\">\n          <div className=\"col p-4\">\n            <select  name=\"country\" className=\"form-control\" onChange={handlerCountries}>\n            <option key=\"0\" value=\"\">Mundial</option>\n              { \n                countries ?\n                  countries.map((value) =>\n                    <option key={value.iso2} value={ value.name }>{value.name}</option>\n                  )\n                :\n                \"\"\n              }\n            </select>\n          </div>\n          {\n            provinces.length>0 &&\n            <div className=\"col p-4\">\n              <select  name=\"country\" className=\"form-control\" onChange={handlerProvince}>\n              <option key=\"0\" value=\"\">--</option>\n                { \n                  provinces.map((value) =>\n                      <option \n                        key={value.uid} \n                        deaths={value.deaths} \n                        recovered={value.recovered} \n                        confirmed={value.confirmed} \n                        value={value.name}\n                      >{value.provinceState || value.countryRegion}</option>\n                  )\n                }\n              </select>\n            </div>\n          }\n        </div>\n        <List_card \n          confirmed={state.confirmed}\n          recovered={state.recovered}\n          deaths={state.deaths}\n          recovery_rate={state.recovery_rate}\n          fatality={state.fatality}\n          recovery_rate={state.recovery_rate}\n        />\n      </div>\n  );\n}\n\nconst mapStateToPros = (state) => ({\n  countries: state.countries.countries\n})\n\nconst mapDispatchtoProsp = (dispatch) => ({\n  add_countries: (countries) => dispatch(addCountries(countries))\n})\n\nexport default connect(mapStateToPros, mapDispatchtoProsp)(App);\n","export const ADD_COUNTRIES = \"ADD_COUNTRIES\"\nexport const ADD_PROVINCES = \"ADD_PROVINCES\"\n\n\n/************** CREADORES DE ACCIONES */\nexport const addCountries = (countries)=> {\n    return {\n       type: ADD_COUNTRIES,\n       payload: {\n        countries\n       }\n   }\n }\n\n export const addProvinces = (provinces)=> {\n  return {\n     type: ADD_PROVINCES,\n     payload: {\n      provinces\n     }\n }\n}","//actions \nimport { ADD_COUNTRIES, ADD_PROVINCES } from '../actions/countryActions'\n\n\nconst initialState = {\n    countries: [],\n    provinces: []\n}\nfunction reducer(store=initialState, action){\n\n    const type = action.type;\n    const payload = action.payload;\n    switch(type){\n        case ADD_COUNTRIES:\n            return {\n                ...store,\n                countries: payload\n            }\n        case ADD_PROVINCES:\n            return {\n                ...store,\n                provinces: payload\n            }\n        default:\n            return store\n    }\n\n}\n\n\nexport default reducer","import { createStore } from 'redux'\nimport reducer from './reducers/reducer'\n\nconst store = createStore(reducer)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//redux\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}